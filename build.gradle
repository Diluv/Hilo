plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '2.5.0'
    id 'checkstyle'
}

version = "${project_version}" + (isSnapshot() ? '.' + getBuildNumber() : '')

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    implementation project('Confluencia')

    implementation group: 'com.diluv.schoomp', name: 'Schoomp', version: '1.1.0'
    implementation group: 'com.diluv.nodecdn', name: 'NodeCDN-Api', version: '1.0.0'
    implementation group: 'com.diluv.clamchowder', name: 'Clam-Chowder', version: '1.0.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
    implementation group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: '1.66'

    testImplementation project(path: ':Confluencia', configuration: 'testOutput')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.2'
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.14.3'
    testImplementation group: 'org.testcontainers', name: 'mariadb', version: '1.14.3'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.14.3'
}

test {
    useJUnitPlatform()
    environment "ENVIRONMENT", "DEVELOPMENT"
}

jar {
    manifest {
        attributes([
            'Timestamp'               : System.currentTimeMillis(),
            'Specification-Title'     : project.archivesBaseName,
            'Specification-Vendor'    : project.vendor,
            'Specification-Version'   : project.version,
            'Implementation-Title'    : project.archivesBaseName,
            'Implementation-Version'  : project.version,
            'Implementation-Vendor'   : project.vendor,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
            'Main-Class'              : 'com.diluv.hilo.Main'
        ])
    }
}

jib {
    to {
        image = "diluv/hilo:" + version
        tags = ['latest' + (isSnapshot() ? "-snapshot" : '')]
        auth {
            username = System.getenv("DOCKER_USERNAME")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }
}

checkstyle {
    toolVersion "8.36.2"
}

static String getBuildNumber() {
    return System.getenv("GITHUB_RUN_NUMBER") ?: "0"
}

static boolean isSnapshot() {
    String ref = System.getenv("GITHUB_REF");
    if (ref != null && ref.startsWith("refs/tags/v")) {
        return false
    }
    return true
}