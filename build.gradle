buildscript {
    ext {
        catalejoVersion = "0.0.1.5-SNAPSHOT"
        inquisitorVersion = "0.0.1.1-SNAPSHOT"
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    jcenter()

    maven {
        url "https://maven.diluv.io"
    }
}

jar {
    manifest {
        attributes "Main-Class": "com.diluv.hilo.Hilo"
    }
}

dependencies {
    compile "com.diluv.catalejo:Catalejo:${catalejoVersion}"
    compile "com.diluv.catalejo:Catalejo-Java:${catalejoVersion}"
    compile "com.diluv.catalejo:Catalejo-Minecraft:${catalejoVersion}"

    compile "com.diluv.inquisitor:Inquisitor:${inquisitorVersion}"
    compile "com.diluv.inquisitor:Inquisitor-ClamAV:${inquisitorVersion}"

    compile "org.jooq:jooq:3.9.3"
    compile "org.jooq:jooq-meta:3.9.3"
    compile "org.jooq:jooq-codegen:3.9.3"
    compile "mysql:mysql-connector-java:5.1.41"
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
}

idea {
    module.iml.withXml {
        def node = it.asNode()
        def content = node.component.find { it.'@name' == 'NewModuleRootManager' }.content[0]
        content.sourceFolder.each { sourceFolder ->
            if (sourceFolder.@url?.endsWith('/resources')) {
                sourceFolder.attributes().with {
                    boolean isTestSource = (remove('isTestSource') == 'true')
                    put('type', isTestSource ? 'java-test-resource' : 'java-resource')
                }
            }
        }
    }
}