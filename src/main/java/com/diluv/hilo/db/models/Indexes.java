/*
 * This file is generated by jOOQ.
 */
package com.diluv.hilo.db.models;


import com.diluv.hilo.db.models.tables.Project;
import com.diluv.hilo.db.models.tables.ProjectFile;
import com.diluv.hilo.db.models.tables.ProjectFileProcessing;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import javax.annotation.Generated;


/**
 * A class modelling indexes of tables of the <code>diluv</code> schema.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index PROJECT_PRIMARY = Indexes0.PROJECT_PRIMARY;
    public static final Index PROJECT_PROJECT_TYPE_ID = Indexes0.PROJECT_PROJECT_TYPE_ID;
    public static final Index PROJECT_USER_ID = Indexes0.PROJECT_USER_ID;
    public static final Index PROJECT_FILE_PARENT_ID = Indexes0.PROJECT_FILE_PARENT_ID;
    public static final Index PROJECT_FILE_PRIMARY = Indexes0.PROJECT_FILE_PRIMARY;
    public static final Index PROJECT_FILE_PROJECT_ID = Indexes0.PROJECT_FILE_PROJECT_ID;
    public static final Index PROJECT_FILE_USER_ID = Indexes0.PROJECT_FILE_USER_ID;
    public static final Index PROJECT_FILE_PROCESSING_PRIMARY = Indexes0.PROJECT_FILE_PROCESSING_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index PROJECT_PRIMARY = Internal.createIndex("PRIMARY", Project.PROJECT, new OrderField[]{Project.PROJECT.ID}, true);
        public static Index PROJECT_PROJECT_TYPE_ID = Internal.createIndex("PROJECT_TYPE_ID", Project.PROJECT, new OrderField[]{Project.PROJECT.PROJECT_TYPE_ID}, false);
        public static Index PROJECT_USER_ID = Internal.createIndex("USER_ID", Project.PROJECT, new OrderField[]{Project.PROJECT.USER_ID}, false);
        public static Index PROJECT_FILE_PARENT_ID = Internal.createIndex("PARENT_ID", ProjectFile.PROJECT_FILE, new OrderField[]{ProjectFile.PROJECT_FILE.PARENT_ID}, false);
        public static Index PROJECT_FILE_PRIMARY = Internal.createIndex("PRIMARY", ProjectFile.PROJECT_FILE, new OrderField[]{ProjectFile.PROJECT_FILE.ID}, true);
        public static Index PROJECT_FILE_PROJECT_ID = Internal.createIndex("PROJECT_ID", ProjectFile.PROJECT_FILE, new OrderField[]{ProjectFile.PROJECT_FILE.PROJECT_ID}, false);
        public static Index PROJECT_FILE_USER_ID = Internal.createIndex("USER_ID", ProjectFile.PROJECT_FILE, new OrderField[]{ProjectFile.PROJECT_FILE.USER_ID}, false);
        public static Index PROJECT_FILE_PROCESSING_PRIMARY = Internal.createIndex("PRIMARY", ProjectFileProcessing.PROJECT_FILE_PROCESSING, new OrderField[]{ProjectFileProcessing.PROJECT_FILE_PROCESSING.PROJECT_FILE_ID, ProjectFileProcessing.PROJECT_FILE_PROCESSING.STATUS}, true);
    }
}
