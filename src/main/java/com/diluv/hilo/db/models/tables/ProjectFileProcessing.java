/*
 * This file is generated by jOOQ.
 */
package com.diluv.hilo.db.models.tables;


import com.diluv.hilo.db.models.Diluv;
import com.diluv.hilo.db.models.Indexes;
import com.diluv.hilo.db.models.Keys;
import com.diluv.hilo.db.models.tables.records.ProjectFileProcessingRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectFileProcessing extends TableImpl<ProjectFileProcessingRecord> {

    private static final long serialVersionUID = 1840043911;

    /**
     * The reference instance of <code>diluv.PROJECT_FILE_PROCESSING</code>
     */
    public static final ProjectFileProcessing PROJECT_FILE_PROCESSING = new ProjectFileProcessing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProjectFileProcessingRecord> getRecordType() {
        return ProjectFileProcessingRecord.class;
    }

    /**
     * The column <code>diluv.PROJECT_FILE_PROCESSING.PROJECT_FILE_ID</code>.
     */
    public final TableField<ProjectFileProcessingRecord, Long> PROJECT_FILE_ID = createField("PROJECT_FILE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>diluv.PROJECT_FILE_PROCESSING.STATUS</code>.
     */
    public final TableField<ProjectFileProcessingRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>diluv.PROJECT_FILE_PROCESSING.SUCCESSFUL</code>.
     */
    public final TableField<ProjectFileProcessingRecord, Boolean> SUCCESSFUL = createField("SUCCESSFUL", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>diluv.PROJECT_FILE_PROCESSING.LOGS</code>.
     */
    public final TableField<ProjectFileProcessingRecord, String> LOGS = createField("LOGS", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>diluv.PROJECT_FILE_PROCESSING.CREATED_AT</code>.
     */
    public final TableField<ProjectFileProcessingRecord, Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>diluv.PROJECT_FILE_PROCESSING</code> table reference
     */
    public ProjectFileProcessing() {
        this(DSL.name("PROJECT_FILE_PROCESSING"), null);
    }

    /**
     * Create an aliased <code>diluv.PROJECT_FILE_PROCESSING</code> table reference
     */
    public ProjectFileProcessing(String alias) {
        this(DSL.name(alias), PROJECT_FILE_PROCESSING);
    }

    /**
     * Create an aliased <code>diluv.PROJECT_FILE_PROCESSING</code> table reference
     */
    public ProjectFileProcessing(Name alias) {
        this(alias, PROJECT_FILE_PROCESSING);
    }

    private ProjectFileProcessing(Name alias, Table<ProjectFileProcessingRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProjectFileProcessing(Name alias, Table<ProjectFileProcessingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diluv.DILUV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROJECT_FILE_PROCESSING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProjectFileProcessingRecord> getPrimaryKey() {
        return Keys.KEY_PROJECT_FILE_PROCESSING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProjectFileProcessingRecord>> getKeys() {
        return Arrays.<UniqueKey<ProjectFileProcessingRecord>>asList(Keys.KEY_PROJECT_FILE_PROCESSING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProjectFileProcessingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProjectFileProcessingRecord, ?>>asList(Keys.PROJECT_FILE_PROCESSING_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectFileProcessing as(String alias) {
        return new ProjectFileProcessing(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectFileProcessing as(Name alias) {
        return new ProjectFileProcessing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjectFileProcessing rename(String name) {
        return new ProjectFileProcessing(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjectFileProcessing rename(Name name) {
        return new ProjectFileProcessing(name, null);
    }
}
